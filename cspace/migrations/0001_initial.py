# Generated by Django 2.2.6 on 2019-11-01 21:51

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Chemical',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('smiles', models.TextField(unique=True)),
                ('chem_name', models.TextField()),
                ('pubchem_compound_cid', models.TextField()),
                ('props_json', models.TextField()),
                ('created', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChemicalSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(unique=True)),
                ('created', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChemicalSetFacet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(unique=True)),
                ('sim_measure', models.TextField(choices=[('RDK/T', 'RDKit/Tanimoto')])),
                ('embedding', models.TextField(choices=[('3/RDK/MDS', '3/RDKit/Multidimensional Scaling')])),
                ('created', models.DateField(auto_now_add=True)),
                ('dist_json', models.TextField()),
                ('chem_ids_json', models.TextField()),
                ('chemical_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cspace.ChemicalSet')),
            ],
        ),
        migrations.CreateModel(
            name='ChemicalTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(unique=True)),
                ('created', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='EmbeddedChemical',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.TextField()),
                ('chemical', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cspace.Chemical')),
                ('facet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cspace.ChemicalSetFacet')),
            ],
        ),
        migrations.CreateModel(
            name='ComputeFacetJob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sim_measure', models.TextField(choices=[('RDK/T', 'RDKit/Tanimoto')])),
                ('embedding', models.TextField(choices=[('3/RDK/MDS', '3/RDKit/Multidimensional Scaling')])),
                ('status', models.IntegerField(choices=[(-1, 'Failed'), (0, 'Pending'), (1, 'Running'), (2, 'Done')], default=0)),
                ('chemical_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cspace.ChemicalSet')),
                ('facet', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cspace.ChemicalSetFacet')),
            ],
        ),
        migrations.AddField(
            model_name='chemical',
            name='sets',
            field=models.ManyToManyField(to='cspace.ChemicalSet'),
        ),
        migrations.AddField(
            model_name='chemical',
            name='tags',
            field=models.ManyToManyField(to='cspace.ChemicalTag'),
        ),
        migrations.AddConstraint(
            model_name='chemicalsetfacet',
            constraint=models.UniqueConstraint(fields=('embedding', 'sim_measure', 'chemical_set'), name='facet_identity'),
        ),
    ]
